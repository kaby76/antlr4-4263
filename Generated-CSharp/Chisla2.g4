grammar Chisla2;
import Oglavleniye; 
 
    aБинарноеЧисло: W_БИНАРНОЕ_ЧИСЛО;
   aТритичноеЧисло: W_ТРИТИЧНОЕ_ЧИСЛО;
 aЧетверичноеЧисор: W_ЧЕТВЕРИЧНОЕ_ЧИСЛО;
  aПятеричноеЧисло: W_ПЯТЕРИЧНОЕ_ЧИСЛО;
 aШестеричноеЧисло: W_ШЕСТЕРИЧНОЕ_ЧИСЛО;
  aСемиричноеЧисло: W_СЕМИРИЧНОЕ_ЧИСЛО;
 aВосмеричноеЧисло: W_ВОСМЕРИЧНОЕ_ЧИСЛО;
aДевятеричноеЧисло: W_ДЕВЯТИРИЧНОЕ_ЧИСЛО;
aДесятеричноеЧисло: A_ДЕСЯТЕРИЧНОЕ_ЧИСЛО;
aШестнадцатиричноеЧисло: W_ШЕСТНАДЦАТИРИЧНОЕ_ЧИСЛО;

aЗнакЧисла: A_МИНУС | A_ПЛЮС;

aЧисло: aЗнакЧисла? (aДесятеричноеЧисло | (aБинарноеЧисло
	| aТритичноеЧисло
	| aЧетверичноеЧисор
	| aПятеричноеЧисло
	| aШестеричноеЧисло
	| aСемиричноеЧисло
	| aВосмеричноеЧисло
	| aДевятеричноеЧисло
	| aШестнадцатиричноеЧисло
));

// Число с плавающей точкой.
aЕпсилонЧастьЧисла: PROBEL? ZNAK_EPSILON aЧисло;
aЧислоСПлавающейТочкой: aЧисло? TOCHKA aЧисло aЕпсилонЧастьЧисла?;

// Расширение парсера числа для включения распознования чисел с плавающей точкой.
aПолныйВидЧисла: aЧисло | aЧислоСПлавающейТочкой;












  W_НОМЕР_НОЛЬ: '0'; W_НОМЕР_ЕДИНИЦА: '1';    W_НОМЕР_ДВА: '2';
   W_НОМЕР_ТРИ: '3';  W_НОМЕР_ЧЕТЫРЕ: '4';   W_НОМЕР_ПЯТЬ: '5';
 W_НОМЕР_ШЕСТЬ: '6';    W_НОМЕР_СЕМЬ: '7'; W_НОМЕР_ВОСЕМЬ: '8';
W_НОМЕР_ДЕВЯТЬ: '9';

//A_НЕНУЛЕВОЕ_ДЕСЯТИРИЧНОЕЧИСЛО: W_НОМЕР_ЕДИНИЦА | W_НОМЕР_ДВА    | W_НОМЕР_ТРИ
//				   			 | W_НОМЕР_ЧЕТЫРЕ  | W_НОМЕР_ПЯТЬ   | W_НОМЕР_ШЕСТЬ
//				   			 | W_НОМЕР_СЕМЬ    | W_НОМЕР_ВОСЕМЬ | W_НОМЕР_ДЕВЯТЬ;

fragment A19: '1' .. '9';
fragment A09: '0' .. '9';

A_ДЕСЯТЕРИЧНОЕ_ЧИСЛО: A19 A09*;

fragment Bb: [bB];

A_ПРЕФИКС_БИНАРНОГО_ЧИСЛА: W_НОМЕР_НОЛЬ Bb PROBEL?;

W_БИНАРНОЕ_ЧИСЛО: 	  A_ПРЕФИКС_БИНАРНОГО_ЧИСЛА [01]+;
W_ТРИТИЧНОЕ_ЧИСЛО: 	  W_НОМЕР_НОЛЬ W_НОМЕР_ТРИ PROBEL ('0' .. '2')+;
W_ЧЕТВЕРИЧНОЕ_ЧИСЛО:  W_НОМЕР_НОЛЬ W_НОМЕР_ЧЕТЫРЕ PROBEL ('0' .. '3')+;
W_ПЯТЕРИЧНОЕ_ЧИСЛО:   W_НОМЕР_НОЛЬ W_НОМЕР_ПЯТЬ PROBEL ('0' .. '4')+;
W_ШЕСТЕРИЧНОЕ_ЧИСЛО:  W_НОМЕР_НОЛЬ W_НОМЕР_ШЕСТЬ PROBEL ('0' .. '5')+;
W_СЕМИРИЧНОЕ_ЧИСЛО:   W_НОМЕР_НОЛЬ W_НОМЕР_СЕМЬ PROBEL ('0' .. '6')+;
W_ВОСМЕРИЧНОЕ_ЧИСЛО:  W_НОМЕР_НОЛЬ W_НОМЕР_ВОСЕМЬ PROBEL ('0' .. '7')+;
W_ДЕВЯТИРИЧНОЕ_ЧИСЛО: W_НОМЕР_НОЛЬ W_НОМЕР_ДЕВЯТЬ PROBEL ('0' .. '8')+;


ZNAK_EPSILON: ('e' | 'E');
ZNAKI_A_F: [a-fA-F];
fragment Xx: [xX];
W_ШЕСТНАДЦАТИРИЧНОЕ_ЧИСЛО: W_НОМЕР_НОЛЬ Xx PROBEL* (A_ДЕСЯТЕРИЧНОЕ_ЧИСЛО | ZNAKI_A_F)+;

A_МИНУС: '-';
A_ПЛЮС: '+';
